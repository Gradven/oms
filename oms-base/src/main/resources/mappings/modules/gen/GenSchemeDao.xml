<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.channelsharing.hongqu.oms.modules.gen.dao.GenSchemeDao">

    <sql id="genSchemeColumns">
		a.*,
		a.gen_table_id AS "genTable.id"
	</sql>

	<sql id="genSchemeJoins">

    </sql>

    <select id="get" resultType="GenScheme">
		SELECT
			<include refid="genSchemeColumns"/>
		FROM gen_scheme a
		<include refid="genSchemeJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="GenScheme">
		SELECT
			<include refid="genSchemeColumns"/>
		FROM gen_scheme a
		<include refid="genSchemeJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="name != null and name != ''">
			AND a.name LIKE
				<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
		</if>
		ORDER BY a.update_time DESC
	</select>

	<select id="findAllList" resultType="GenScheme">
		SELECT
			<include refid="genSchemeColumns"/>
		FROM gen_scheme a
		<include refid="genSchemeJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		ORDER BY a.update_time DESC
	</select>

	<insert id="insert">
		INSERT INTO gen_scheme(
			id,
			name,
			category,
			project_path,
			package_name,
			module_name,
			sub_module_name,
			function_name,
			function_name_simple,
			function_author,
			gen_table_id,
			create_by,
			create_time,
			update_by,
			update_time,
			remark,
			del_flag
		) VALUES (
			#{id},
			#{name},
			#{category},
			#{projectPath},
			#{packageName},
			#{moduleName},
			#{subModuleName},
			#{functionName},
			#{functionNameSimple},
			#{functionAuthor},
			#{genTable.id},
			#{createBy.id},
			#{createTime},
			#{updateBy.id},
			#{updateTime},
			#{remark},
			#{delFlag}
		)
	</insert>

	<update id="update">
		UPDATE gen_scheme SET
			name = #{name},
			category = #{category},
			project_path = #{projectPath},
			package_name = #{packageName},
			module_name = #{moduleName},
			sub_module_name = #{subModuleName},
			function_name = #{functionName},
			function_name_simple = #{functionNameSimple},
			function_author = #{functionAuthor},
			gen_table_id = #{genTable.id},
			update_by = #{updateBy.id},
			update_time = #{updateTime},
			remark = #{remark}
		WHERE id = #{id}
	</update>

	<update id="delete">
		UPDATE gen_scheme SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

</mapper>
