<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>oms-parent</artifactId>
        <groupId>com.channelsharing.hongqu.oms</groupId>
        <version>1.0.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>oms-business</artifactId>
    <packaging>war</packaging>
    <name>oms-business</name>
    <url>http://maven.apache.org</url>
    <dependencies>
        <dependency>
            <groupId>com.channelsharing.hongqu.oms</groupId>
            <artifactId>oms-pub</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
            <classifier>classes</classifier>
        </dependency>
    </dependencies>

    <build>
        <defaultGoal>compile</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <attachClasses>true</attachClasses><!-- 打war包时，同时打一个jar包 -->
                    <!-- 配置此项是防止缺失web.xml文件导致项目打包失败,因为此项目将被用于web整合, web整合时各个web模块的同名文件以上级项目优先级最高,也就是说本项目web.xml将被覆盖,
                        因此本项目可以不具备web.xml文件,为了防止本项目不具备web.xml文件从而导致打包失败, 故配置此项。 -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <!-- 将父pom的jar包也打入到本工程中 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>
</project>
